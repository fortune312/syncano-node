{"version":3,"sources":["channel.js"],"names":["Channel","url","instanceName","instance","_getInstanceURL","publish","room","payload","fetch","bind","Promise","resolve","reject","options","method","body","JSON","stringify","then","catch"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;AAIA,MAAMA,OAAN,gCAAmC;AACjCC,QAAO;AACL,UAAM,EAACC,YAAD,KAAiB,KAAKC,QAA5B;;AAEA,WAAQ,GAAE,KAAKC,eAAL,CAAqBF,YAArB,CAAmC,4BAA7C;AACD;;AAED;;;;;;;;AAQAG,UAASC,IAAT,EAAeC,OAAf,EAAwB;AACtB,UAAMC,QAAQ,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAd;;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,UAAU;AACdC,gBAAQ,MADM;AAEdC,cAAMC,KAAKC,SAAL,CAAe,EAACX,IAAD,EAAOC,OAAP,EAAf;AAFQ,OAAhB;AAIAC,YAAM,KAAKP,GAAL,EAAN,EAAkBY,OAAlB,EAA2BK,IAA3B,CAAgCP,OAAhC,EAAyCQ,KAAzC,CAA+CP,MAA/C;AACD,KANM,CAAP;AAOD;AAzBgC;;kBA4BpBZ,O","file":"channel.js","sourcesContent":["import QueryBuilder from './query-builder'\n\n/**\n * Syncano account query builder\n * @property {Function}\n */\nclass Channel extends QueryBuilder {\n  url () {\n    const {instanceName} = this.instance\n\n    return `${this._getInstanceURL(instanceName)}/channels/default/publish/`\n  }\n\n  /**\n   * Publish to channel\n   *\n   * @returns {Promise}\n   *\n   * @example {@lang javascript}\n   * const instance = await channel.publish('room_name', payload={})\n   */\n  publish (room, payload) {\n    const fetch = this.fetch.bind(this)\n\n    return new Promise((resolve, reject) => {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({room, payload})\n      }\n      fetch(this.url(), options).then(resolve).catch(reject)\n    })\n  }\n}\n\nexport default Channel\n"]}