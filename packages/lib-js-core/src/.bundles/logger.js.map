{"version":3,"sources":["logger.js"],"names":["LEVELS","Logger","constructor","scope","callback","levels","config","_start","_scope","_callback","forEach","level","_makePrinter","bind","args","_getNow","_level","shift","date","_print","_pad","width","string","padding","length","now","diff","_calculateDiff","time","_getNowString","split","map","_parseArg","join","console","log","_shouldLog","vars","excluded","filter","item","startsWith","replace","matchAll","isWhitelisted","indexOf","isExcluded","arg","isObject","JSON","stringify","Date","toISOString","t1","t2","getTime","logger","_levels","Array","isArray","TypeError","listen"],"mappings":"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","file":"logger.js","sourcesContent":["/**\n * Debug your code.\n * @property {Function}\n */\n\n/* global ARGS */\n\nconst LEVELS = ['error', 'warn', 'info', 'debug']\n\nclass Logger {\n  constructor ({scope, callback, levels, config}) {\n    this._start = null\n    this._scope = scope\n    this._callback = callback\n\n    this.config = config\n\n    levels.forEach(level => {\n      this[level] = this._makePrinter.bind(this, level)\n    })\n  }\n\n  _makePrinter (...args) {\n    this._start = this._start || this._getNow()\n    this._level = args.shift()\n\n    const date = this._print(...args)\n\n    if (this._callback) {\n      this._callback({args, date, level: this._level})\n    }\n\n    this._level = null\n  }\n\n  _pad (width, string, padding) {\n    return width <= string.length\n      ? string\n      : this._pad(width, padding + string, padding)\n  }\n\n  _print (...args) {\n    // Time\n    const now = this._getNow()\n    const diff = `+${this._calculateDiff(this._start, now)}`\n    const time = this._getNowString(now).split(' ')[1]\n\n    // Level\n    const level = this._pad(5, `${this._level}`, ' ')\n    args = args.map(this._parseArg).join(' ')\n\n    if (this.config !== false) {\n      console.log(`${level}:`, time, this._scope, args, diff, 'ms')\n    }\n\n    return now\n  }\n\n  // TODO: this is not used anyhow right now\n  _shouldLog (scope) {\n    if (this.config) {\n      if (typeof this.config === 'boolean') {\n        return this.config\n      }\n\n      const vars = this.config.split(',')\n      const excluded = vars\n        .filter(item => item.startsWith('-'))\n        .map(item => item.replace(/^-/, ''))\n\n      const matchAll = vars.filter(item => item === '*').length\n      const isWhitelisted = vars.indexOf(scope) >= 0\n      const isExcluded = excluded.indexOf(scope) >= 0\n\n      return (matchAll || isWhitelisted) && !isExcluded\n    }\n\n    return false\n  }\n\n  _parseArg (arg) {\n    const isObject = arg !== null && typeof arg === 'object'\n\n    if (isObject) {\n      return `\\n\\n  ${JSON.stringify(arg, null, 2)\n        .split('\\n')\n        .join('\\n  ')}\\n\\n`\n    }\n\n    return arg\n  }\n\n  _getNow () {\n    return new Date()\n  }\n\n  _getNowString (date) {\n    return date\n      .toISOString()\n      .replace(/T/, ' ') // Replace T with a space\n      .replace(/\\..+/, '') // Delete the dot and everything after\n  }\n\n  _calculateDiff (t1, t2) {\n    return (t2.getTime() - t1.getTime()) / 1000\n  }\n}\n\nconst logger = function (scope) {\n  return new Logger({\n    scope,\n    config: logger.config,\n    callback: logger._callback,\n    levels: logger._levels || LEVELS\n  })\n}\n\nlogger.levels = function (levels) {\n  if (!Array.isArray(levels)) {\n    throw new TypeError('Levels must be array of strings.')\n  }\n\n  logger._levels = levels\n}\n\nlogger.listen = function (callback) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('Callback must be a function.')\n  }\n\n  logger._callback = callback\n}\n\nexport default logger\n"]}