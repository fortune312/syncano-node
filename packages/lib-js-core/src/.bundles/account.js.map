{"version":3,"sources":["account.js"],"names":["Account","url","_getSyncanoURL","get","authKey","fetch","nonInstanceFetch","bind","Promise","resolve","reject","headers","then","res","catch","err"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;AAIA,MAAMA,OAAN,gCAAmC;AACjCC,QAAO;AACL,WAAQ,GAAE,KAAKC,cAAL,EAAsB,WAAhC;AACD;;AAED;;;;;;;;AAQAC,MAAKC,OAAL,EAAc;AACZ,UAAMC,QAAQ,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAd;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,UAAU;AACd,qBAAaP;AADC,OAAhB;;AAIAC,YAAM,KAAKJ,GAAL,EAAN,EAAkB,EAAlB,EAAsBU,OAAtB,EACGC,IADH,CACQC,OAAOJ,QAAQI,GAAR,CADf,EAEGC,KAFH,CAESC,OAAOL,OAAOK,GAAP,CAFhB;AAGD,KARM,CAAP;AASD;AAxBgC;;kBA2BpBf,O","file":"account.js","sourcesContent":["import QueryBuilder from './query-builder'\n\n/**\n * Syncano account query builder\n * @property {Function}\n */\nclass Account extends QueryBuilder {\n  url () {\n    return `${this._getSyncanoURL()}/account/`\n  }\n\n  /**\n   * Get details of Syncano account\n   *\n   * @returns {Promise}\n   *\n   * @example {@lang javascript}\n   * const account = await account.get('0aad29dd0be2bcebb741525b9c5901e55cf43e98')\n   */\n  get (authKey) {\n    const fetch = this.nonInstanceFetch.bind(this)\n    return new Promise((resolve, reject) => {\n      const headers = {\n        'X-API-KEY': authKey\n      }\n\n      fetch(this.url(), {}, headers)\n        .then(res => resolve(res))\n        .catch(err => reject(err))\n    })\n  }\n}\n\nexport default Account\n"]}