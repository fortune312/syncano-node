version: 2
jobs:
  build:
    name: Build
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - restore_cache:
          keys:
          - v1-dependencies-cli-{{ checksum "packages/cli/package.json" }}
          - v1-dependencies-cli-

      - restore_cache:
          keys:
          - v1-dependencies-core-{{ checksum "packages/lib-js-core/package.json" }}
          - v1-dependencies-core-

      - restore_cache:
          keys:
          - v1-dependencies-client-{{ checksum "packages/lib-js-client/package.json" }}
          - v1-dependencies-client

      - restore_cache:
          keys:
          - v1-dependencies-validate-{{ checksum "packages/lib-js-validate/package.json" }}
          - v1-dependencies-validate

      - restore_cache:
          keys:
          - v1-dependencies-test-{{ checksum "packages/lib-js-test/package.json" }}
          - v1-dependencies-test

      - run: yarn install
      - run: npx lerna bootstrap

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - save_cache:
          paths:
            - packages/cli/node_modules
          key: v1-dependencies-cli-{{ checksum "packages/cli/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-core/node_modules
          key: v1-dependencies-core-{{ checksum "packages/lib-js-core/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-client/node_modules
          key: v1-dependencies-client-{{ checksum "packages/lib-js-client/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-validate/node_modules
          key: v1-dependencies-validate-{{ checksum "packages/lib-js-validate/package.json" }}

      - save_cache:
          paths:
            - packages/lib-js-test/node_modules
          key: v1-dependencies-test-{{ checksum "packages/lib-js-test/package.json" }}

      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  test_unit:
    name: Unit Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn run test:unit
      - save_cache:
          key: v1-repo-units-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  test_e2e:
    name: E2E Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn run test:e2e

  test_lint:
    name: Linter
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn run lint

  deploy_docs:
    name: Deploying Docs
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: echo 'export SYNCANO_AUTH_KEY=${CANARY_SYNCANO_AUTH_KEY}' >> $BASH_ENV
      - run: echo 'export SYNCANO_PROJECT_INSTANCE=${CANARY_SYNCANO_PROJECT_INSTANCE}' >> $BASH_ENV
      - run: node packages/cli/lib/cli.js deploy
      - run: node packages/cli/lib/cli.js hosting sync docs
      - run: node packages/cli/lib/cli.js hosting sync cookbook
      - run: node packages/cli/lib/cli.js hosting sync cheatsheet

  deploy_registry:
    name: Deploying Test Registry
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo/packages/registry

    steps:
      - run: yarn
      - run: sh ./bin/deploy-staging

  publish:
    name: NPM publish
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npx npm-cli-login -u $NPM_USER -p $NPM_PASS -e $NPM_EMAIL -s syncano
      - run: npx lerna publish --canary --yes

  codecov:
    name: Codecov report
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-repo-units-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn run report:coverage

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - deploy_registry:
          requires:
            - build
      - test_lint:
          requires:
            - build
            - deploy_registry
      - test_unit:
          requires:
            - build
            - deploy_registry
      - test_e2e:
          requires:
            - build
            - deploy_registry
      - deploy_docs:
          requires:
            - build
            - test_e2e
            - test_lint
            - test_unit
          filters:
            branches:
              only: master
      - publish:
          requires:
            - test_e2e
            - test_lint
            - test_unit
          filters:
            branches:
              only: master
      - codecov:
          requires:
            - test_unit
